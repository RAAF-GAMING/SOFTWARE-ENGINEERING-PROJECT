package prodottosistema;

//Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class TestRicercaPerNome{
	private WebDriver driver;
	private Map<String, Object> vars;
	JavascriptExecutor js;
	
	@Before
	public void setUp() {
		System.setProperty("webdriver.chrome.driver", "test/prodottosistema/chromedriver");
		driver = new ChromeDriver();
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}
	
	@After
	public void tearDown() {
		driver.quit();
	}
	
	@Test
	public void testRicercaPerNomeCompletoOK() {
		 // Test name: testRicercaPerNomeOK
		 // Step # | name | target | value | comment
		 // 1 | open | http://localhost:8080/RAAF-GAMING/ |  | 
		 driver.get("http://localhost:8080/RAAF-GAMING/");
		 // 2 | click | name=ricerca |  | 
		 driver.findElement(By.name("ricerca")).click();
		 // 3 | type | name=ricerca | the last of us 2 | 
		 driver.findElement(By.name("ricerca")).sendKeys("the last of us 2");
		 // 4 | sendKeys | name=ricerca | ${KEY_ENTER} | 
		 driver.findElement(By.name("ricerca")).sendKeys(Keys.ENTER);
		 // 5 | assertText | name=nomeProdotto | the last of us 2 | 
		 assertEquals("the last of us 2",driver.findElement(By.name("nomeProdotto0")).getText());
	}
	
	@Test
	public void testRicercaPerNomeParziale() {
		// Test name: testRicercaPerNomeParziale
		// Step # | name | target | value | comment
		 // 1 | open | http://localhost:8080/RAAF-GAMING/ |  | 
		 driver.get("http://localhost:8080/RAAF-GAMING/");
		 // 2 | click | name=ricerca |  | 
		 driver.findElement(By.name("ricerca")).click();
		 // 3 | type | name=ricerca | ass | 
		 driver.findElement(By.name("ricerca")).sendKeys("ass");
		 // 4 | sendKeys | name=ricerca | ${KEY_ENTER} | 
		 driver.findElement(By.name("ricerca")).sendKeys(Keys.ENTER);
		 // 5 | assertText | name=nomeProdotto | ass | 
		 for(int i=0;i<3;i++) {
			 String testo= driver.findElement(By.name("nomeProdotto"+i)).getText();
			 System.out.println(testo);
			 assertTrue("Non contiene il testo!!!", testo.contains("ass"));
		 }
		 
	}
	
	@Test
	public void testRicercaPerNomeNO() {
	    // Test name: testRicercaPerNomeNO
	    // Step # | name | target | value | comment
	    // 1 | open | http://localhost:8080/RAAF-GAMING/ |  | 
	    driver.get("http://localhost:8080/RAAF-GAMING/");
	    // 2 | setWindowSize | 912x600 |  | 
	    driver.manage().window().setSize(new Dimension(912, 600));
	    // 3 | click | name=ricerca |  | 
	    driver.findElement(By.name("ricerca")).click();
	    // 4 | type | name=ricerca | q | 
	    driver.findElement(By.name("ricerca")).sendKeys("q");
	    // 5 | sendKeys | name=ricerca | ${KEY_ENTER} | 
	    driver.findElement(By.name("ricerca")).sendKeys(Keys.ENTER);
	    // 6 | assertElementNotPresent | name=prodottoCard |  | 
	    List<WebElement> elements = driver.findElements(By.name("prodottoCard"));
	    assert(elements.size() == 0);
	}
}
